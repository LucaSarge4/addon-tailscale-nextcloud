#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Community Add-on: Tailscale
# Enables Tailscale Proxy and Funnel feature
# ==============================================================================

declare wait_counter=0
declare curl_result
declare tailscale_command
declare nextcloud_port
declare target_url
declare proxy_port
declare hostname
declare tailnet_name

nextcloud_port=$(bashio::config 'nextcloud_port')
proxy_port=$(bashio::config 'proxy_and_funnel_port' '443')
hostname=$(bashio::config 'hostname' 'nextcloud')

# Get tailnet name from Tailscale status
tailnet_name=$(/opt/tailscale status --json | jq -r '.CurrentTailnet.Name')
if [[ -z "${tailnet_name}" ]]; then
  bashio::log.error "Could not determine tailnet name"
  bashio::exit.nok
fi

target_url="https+insecure://127.0.0.1:${nextcloud_port}"

# Check if Tailscale HTTPS is enabled
if ! /opt/tailscale status --self=true --peers=false --json \
  | jq -rce '.Self.CapMap | has("https")' > /dev/null;
then
  bashio::log.error "Tailscale's HTTPS support is disabled"
  bashio::exit.nok
fi

# Try to connect to Nextcloud but don't fail if it's not ready
# Using --insecure because we're connecting locally and the certificate might be self-signed
curl_result=$(curl -k -s -o /dev/null -w "%{http_code}" "https://127.0.0.1:${nextcloud_port}" || echo "000")
if (( 200 == curl_result )); then
  bashio::log.info "Nextcloud is accessible"
else
  bashio::log.warning "Nextcloud is not accessible at https://127.0.0.1:${nextcloud_port}"
  bashio::log.warning "Make sure Nextcloud is running and the port is correct"
  bashio::log.warning "Continuing anyway as Nextcloud might be on a different host or need more time to start"
fi

if ! bashio::config.true 'funnel'; then
  # Set up serve command
  exec /opt/tailscale serve \
    --https="${proxy_port}" \
    --hostname="${hostname}" \
    --set-path=/ \
    --yes \
    "${target_url}"
else
  # Check if Funnel is available
  if ! /opt/tailscale status --self=true --peers=false --json \
    | jq -rce '.Self.CapMap | has("funnel")' > /dev/null;
  then
    bashio::log.error "Tailscale's Funnel support is disabled"
    bashio::exit.nok
  fi
  
  # Set up funnel command and keep the service running
  /opt/tailscale funnel \
    --https="${proxy_port}" \
    --set-path=/ \
    --bg \
    --yes \
    "${target_url}"

  # Keep the service running by monitoring the funnel status
  while true; do
    sleep 30
    if ! /opt/tailscale funnel status --json | jq -e '.Tunnels[] | select(.Hostname == "'"${hostname}"'.'${tailnet_name}'.ts.net")' > /dev/null; then
      bashio::log.warning "Funnel connection lost, restarting..."
      break
    fi
  done
fi
